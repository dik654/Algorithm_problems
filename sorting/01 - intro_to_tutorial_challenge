use std::env;
use std::fs:File;
use std::io::{self, BufRead, Write};

fn introTutorial(V: i32, arr: &[i32]) -> i32 {
    let mut answer: i32 = -1;
    for i in 0..arr.len() {
        if V == arr[i] { answer = i as i32; }
    }
    answer
}

fn main() {
    let stdin = io::stdin();
    let mut stdin_iterator = stdin.lock().lines();

    let mut fptr = File::create(env::var("OUTPUT_PATH").unwrap()).unwrap();
    let V = stdin_iterator.next().unwrap().unwrap().trim().parse::<i32>().unwrap();
    let n = stdin_iterator.next().unwrap().unwrap().trim().parse::<i32>().unwrap();
    let arr: Vec<i32> = stdin_iterator.next().unwrap().unwrap().trim_end().split(' ').map(|s| s.to_string().parse::<i32>().unwrap()).collect();
    let result = introTutorial(V, &arr);
    writeln!(&mut fptr, "{}", result).ok();
}